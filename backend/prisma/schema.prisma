generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  profilePic  String?
  createdAt   DateTime  @default(now())

  clients  Client[]
  invoices Invoice[]
  services Service[]
}

model Client {
  id       Int       @id @default(autoincrement())
  name     String
  contact  String?
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
  projects Project[]
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  rate        Float?
  dueDate     DateTime?
  completed   Boolean   @default(false)
  completedAt DateTime?

  client   Client @relation(fields: [clientId], references: [id])
  clientId Int

  timeEntries TimeEntry[]
}

model TimeEntry {
  id          Int      @id @default(autoincrement())
  date        DateTime
  hours       Float
  description String?
  billed      Boolean  @default(false)

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  /// ← add this back‑relation:
  invoiceEntries InvoiceTimeEntry[]
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  fee         Float

  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())

  /// ← add this back‑relation:
  invoiceServices InvoiceService[]
}

model Invoice {
  id     Int      @id @default(autoincrement())
  date   DateTime @default(now())
  amount Float
  status String?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  invoiceEntries  InvoiceTimeEntry[] // ← join with TimeEntry
  invoiceServices InvoiceService[] // ← join with Service

  createdAt DateTime @default(now())
}

model InvoiceTimeEntry {
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId Int

  timeEntry   TimeEntry @relation(fields: [timeEntryId], references: [id])
  timeEntryId Int

  @@id([invoiceId, timeEntryId])
}

model InvoiceService {
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  invoiceId Int

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int

  @@id([invoiceId, serviceId])
}
